# $Id: screen-keys.conf,v 1.7 2010/07/31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.

# Set the prefix to ^A.
unbind C-b
#set -g prefix ^A
#bind a send-prefix
set-option -g prefix ^T
bind C-t send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# screen ^C c
unbind ^C
bind ^C new-window
#bind c
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays *
unbind *
bind * list-clients

# next ^@ ^N sp n
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^?
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \
unbind \
bind \ confirm-before "kill-server"

# kill K k
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# split -v |
unbind |
bind | split-window

# :kB: focus up
unbind Tab
bind Tab select-pane -t:.+
unbind BTab
bind BTab select-pane -t:.-

# " windowlist -b
unbind '"'
bind '"' choose-window

### my settings
# derault shell
# set-option -g default-shell zsh

## ウィンドウ番号を1から開始
set-option -g base-index 1

## マウスクリックでペイン選択
set-option -g mouse-select-pane on

## メッセージ表示時間(既定値は1000?)
set-option -g display-time 2000

## バッファ上限数(既定値は9で0番-8番)
set-option -g buffer-limit 32

## 後方スクロール行数(既定値は2000)
set-option -g history-limit 100000

## ssh with title example: username@localhost
bind-key S command-prompt "new-window -n %1 'ssh %1'"

# tmux log @see .zshrc
bind-key H pipe-pane 'cat >>$HOME/.tmux/#W-tmux.log' \; display-message 'Started logging to $HOME/.tmux/#W-tmux.log'
bind-key h pipe-pane \; display-message 'Ended logging to $HOME/.tmux/#W-tmux.log'

# 256color
set-option -g default-terminal screen-256color

## ここからステータス行(最下行)の設定

## 既定の属性
# 「xxx-fg」「xxx-bg」は色、「xxx-attr」は属性
# 透明にしたい場合、端末によっては
# status-bgを「default」にすると256色パレット色の表示が部分的におかしくなる?
# 背景色は端末エミュレータの背景色に近いものを設定すると良いかも
set-option -g status-fg   default
set-option -g status-bg   colour239
set-option -g status-attr default

set-option -g status-left-fg   default
set-option -g status-left-bg   colour24
set-option -g status-left-attr default

set-option -g status-right-fg   colour115
set-option -g status-right-bg   colour22
set-option -g status-right-attr bold

## ウィンドウ一覧部における現在非アクティブなウィンドウの項目の表示
set-window-option -g window-status-fg   red
set-window-option -g window-status-bg   default
set-window-option -g window-status-attr default

## ウィンドウ一覧部における現在アクティブなウィンドウの項目の表示
## 端末によっては256色の色を用いると正常に表示されない?
set-window-option -g window-status-current-fg   white
set-window-option -g window-status-current-bg   colour125
set-window-option -g window-status-current-attr bold

## メッセージ/プロンプト
set-option -g message-fg   white
set-option -g message-bg   colour131
set-option -g message-attr bright,bold

## スクロールの右上やコピーモード選択範囲のスタイル
set-window-option -g mode-fg   colour220
# 256色パレットの色を付けると表示が変になる?(reverseすると回避可能?)
set-window-option -g mode-bg   colour58
set-window-option -g mode-attr reverse,bold

## 左ステータス(現在時刻を表示)
## 日付/時刻部分はstrftime()と同様の書式
set-option -g status-left "#[fg=colour211,bold]%m#[default,fg=colour211]/#[fg=colour211,bold]%d #[fg=colour211]%H#[default,blink,fg=colour211]:#[default,fg=colour211,bold]%M#[default]"
set-option -g status-left-length 11  # 既定値は10

## 右ステータス(タイトルを表示)
# set-option -g status-right "#T #[fg=yellow]#(uptime|awk '{print $(NF-6),$(NF-2),$(NF-1),$(NF-0)}')"
set-option -g status-right "#T #[fg=yellow]#(uptime|tail -c41|sed -e 's/load/Avg/g'|sed -e 's/averages//g'|sed -e 's/average//g'|sed -e 's/://g'|sed -e 's/,//g')"
# set-option -g status-right "#T #(uptime|awk '{print $11}') #(date)"
set-option -g status-right-length 70  # 右ステータスも長さ制限可

## ウィンドウマネージャ向けのタイトル
set-option -g set-titles on
set-option -g set-titles-string "[tmux]#T \"#W\"(#I/#P) @ #H"

## ステータス行更新間隔(1で毎秒更新・既定値15)
set-option -g status-interval 10

# コピーモードのキーマップ。標準はemacs
# copy-mode ^[
unbind ^"["
bind -r ^"[" copy-mode
unbind ^]
bind -r ^] paste-buffer
set-window-option -g mode-keys vi
# vでマーク開始
bind -t vi-copy v begin-selection
# yでヤンク
bind -t vi-copy y copy-selection

# buffer to pbcopy
# bind C-q run-shell "tmux-pbcopy"

# current directory
# bind M-c run-shell "tmux-neww"
# bind M-s run-shell "$HOME/bin/tmux-neww"
# reattach
# bind M-s run-shell "$HOME/bin/reattach-to-user-namespace -l zsh"
# pbcopy pbpaste
# # set-option -g default-command "reattach-to-user-namespace -l zsh"

