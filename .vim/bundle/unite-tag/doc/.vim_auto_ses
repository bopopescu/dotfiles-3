let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
inoremap <silent> <expr> <Plug>(neocomplcache_start_unite_snippet) unite#sources#snippet#start_complete()
inoremap <silent> <expr> <Plug>(neocomplcache_start_unite_quick_match) unite#sources#neocomplcache#start_quick_match()
inoremap <silent> <expr> <Plug>(neocomplcache_start_unite_complete) unite#sources#neocomplcache#start_complete()
inoremap <silent> <Plug>(neocomplcache_start_auto_select_complete) =neocomplcache#popup_post()
inoremap <silent> <Plug>(neocomplcache_start_auto_complete) 
inoremap <silent> <Plug>NERDCommenterInInsert  <BS>:call NERDComment(0, "insert")
inoremap <silent> <SNR>25_yrrecord =YRRecord3()
map! <D-v> *
nnoremap <silent>  :Unite -vertical -buffer-name=files buffer file_mru bookmark
nnoremap <silent>  :UniteWithBufferDir -vertical -buffer-name=files file
nnoremap  :GrepBuffer 
snoremap  a<BS>
nnoremap <silent>  :YRReplace '1', 'p'
nnoremap <silent>  :YRReplace '-1', 'P'
nnoremap <silent>  :Unite tag
snoremap  a<BS>
nmap  :nohlsearch
nmap # #zz
snoremap % a<BS>%
snoremap ' a<BS>'
nmap * *zz
noremap / :call SearchCompleteStart()/
nmap G Gzz
vmap <silent> K <Plug>(ref-keyword)
nmap <silent> K <Plug>(ref-keyword)
nmap N Nzz
xnoremap <silent> P :YRPaste 'P', 'v'
nnoremap <silent> P :YRPaste 'P'
snoremap U a<BS>U
snoremap \ a<BS>\
map \t <Plug>TaskList
map \T :TaskList
nmap \y :YRShow
vmap \/ <Plug>NERDCommenterToggle
nmap \/ <Plug>NERDCommenterToggle
snoremap ^ a<BS>^
snoremap ` a<BS>`
xnoremap <silent> d :YRDeleteRange 'v'
nmap gx <Plug>NetrwBrowseX
nnoremap <silent> gp :YRPaste 'gp'
nnoremap <silent> gP :YRPaste 'gP'
nmap g# g#zz
nmap g* g*zz
nmap n nzz
xnoremap <silent> p :YRPaste 'p', 'v'
nnoremap <silent> p :YRPaste 'p'
xnoremap <silent> x :YRDeleteRange 'v'
xnoremap <silent> y :YRYankRange 'v'
snoremap <Left> bi
snoremap <Right> a
snoremap <BS> a<BS>
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
nmap <silent> <Plug>NERDCommenterAppend :call NERDComment(0, "append")
nnoremap <silent> <Plug>NERDCommenterToEOL :call NERDComment(0, "toEOL")
vnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment(1, "uncomment")
nnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment(0, "uncomment")
vnoremap <silent> <Plug>NERDCommenterNest :call NERDComment(1, "nested")
nnoremap <silent> <Plug>NERDCommenterNest :call NERDComment(0, "nested")
vnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment(1, "alignBoth")
nnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment(0, "alignBoth")
vnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment(1, "alignLeft")
nnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment(0, "alignLeft")
vmap <silent> <Plug>NERDCommenterYank :call NERDComment(1, "yank")
nmap <silent> <Plug>NERDCommenterYank :call NERDComment(0, "yank")
vnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment(1, "invert")
nnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment(0, "invert")
vnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment(1, "sexy")
nnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment(0, "sexy")
vnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment(1, "minimal")
nnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment(0, "minimal")
vnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment(1, "toggle")
nnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment(0, "toggle")
vnoremap <silent> <Plug>NERDCommenterComment :call NERDComment(1, "norm")
nnoremap <silent> <Plug>NERDCommenterComment :call NERDComment(0, "norm")
vnoremap <silent> <Plug>(ref-keyword) :call ref#K('visual')
nnoremap <silent> <Plug>(ref-keyword) :call ref#K('normal')
nnoremap <silent> <SNR>25_yrrecord :call YRRecord3()
xmap <BS> "-d
vmap <D-x> "*d
vmap <D-c> "*y
vmap <D-v> "-d"*P
nmap <D-v> "*P
inoremap <silent>  :Unite -vertical -buffer-name=files buffer file_mru bookmark
inoremap <silent>  :UniteWithBufferDir -buffer-name=files file
inoremap <silent>  :Unite tag
let &cpo=s:cpo_save
unlet s:cpo_save
set autoindent
set backspace=indent,eol,start
set backup
set backupdir=~/.vim/vim_backup
set backupext=.bak
set cindent
set complete=.,w,b,u,t,i,k
set completefunc=neocomplcache#manual_complete
set completeopt=menuone,longest,preview
set directory=~/.vim/vim_swap
set expandtab
set fileencodings=iso-2022-jp-3,euc-jisx0213,cp932,ucs-bom,iso-2022-jp-3,iso-2022-jp,eucjp-ms,euc-jisx0213,euc-jp,sjis,cp932,utf-8
set helplang=ja
set history=1000
set hlsearch
set ignorecase
set langmenu=none
set laststatus=2
set previewheight=5
set ruler
set runtimepath=~/.vim/bundle/vundle,~/.vim/bundle/unite.vim,~/.vim/bundle/unite-tag,~/.vim/bundle/YankRing.vim,~/.vim/bundle/neocomplcache,~/.vim/bundle/TaskList.vim,~/.vim/bundle/Source-Explorer-srcexpl.vim,~/.vim/bundle/taglist.vim,~/.vim/bundle/Changed,~/.vim/bundle/SearchComplete,~/.vim/bundle/ref.vim,~/.vim/bundle/pyflakes.vim,~/.vim/bundle/pep8,~/.vim/bundle/pydoc.vim,~/.vim/bundle/fugitive.vim,~/.vim/bundle/ack.vim,~/.vim/bundle/grep.vim,~/.vim/bundle/autosession.vim,~/.vim,/Applications/MacVim-7_3-53/MacVim.app/Contents/Resources/vim/vimfiles,/Applications/MacVim-7_3-53/MacVim.app/Contents/Resources/vim/runtime,/Applications/MacVim-7_3-53/MacVim.app/Contents/Resources/vim/vimfiles/after,~/.vim/after,~/.vim/bundle/vundle/,~/.vim/bundle/autosession.vim/after,~/.vim/bundle/grep.vim/after,~/.vim/bundle/ack.vim/after,~/.vim/bundle/fugitive.vim/after,~/.vim/bundle/pydoc.vim/after,~/.vim/bundle/pep8/after,~/.vim/bundle/pyflakes.vim/after,~/.vim/bundle/ref.vim/after,~/.vim/bundle/SearchComplete/after,~/.vim/bundle/Changed/
set scrolloff=5
set sessionoptions=blank,buffers,curdir,folds,help,options,tabpages,winsize,resize
set shiftwidth=2
set showcmd
set showmatch
set smartcase
set smartindent
set splitbelow
set splitright
set statusline=%<%F\ %r%h%w%y%{'['.(&fenc!=''?&fenc:&enc).'|'.&ff.']'}\ \ %l/%L\ (%P)%m%=%{strftime(\"%Y/%m/%d\ %H:%M\")}
set switchbuf=useopen
set tabstop=2
set tags=./tags,./../tags,./*/tags,./../../tags,./../../../tags,./../../../../tags,./../../../../../tags
set title
set visualbell
set wildmenu
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/git/home/.vim/bundle/unite-tag/doc
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
silent! argdel *
set lines=52 columns=180
set splitbelow splitright
wincmd t
set winheight=1 winwidth=1
argglobal
enew
nnoremap <buffer>  :UniteWithCursorWord -immediately tag
nnoremap <buffer> <silent> K :call ShowPyDoc(expand("<cword>"), 1)
cnoremap <buffer> <expr>  fugitive#buffer().rev()
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal cindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i,k
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=neocomplcache#manual_complete
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != ''
setlocal filetype=
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal nomacmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
setlocal nonumber
setlocal numberwidth=4
setlocal omnifunc=syntaxcomplete#Complete
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal smartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != ''
setlocal syntax=
endif
setlocal tabstop=2
setlocal tags=./tags,./../tags,./*/tags,./../../tags,./../../../tags,./../../../../tags,./../../../../../tags,~/git/home/.vim/bundle/unite-tag/.git/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
lcd ~/git/home/.vim/bundle/unite-tag/doc
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
