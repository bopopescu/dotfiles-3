#!/usr/bin/env zsh

# growl
# if [ $ARCHI = darwin ]; then
  # # growlnotify exevute  30 second later
  # local COMMAND=""
  # local COMMAND_TIME=""
  # precmd() {
    # if [ "$COMMAND_TIME" -ne "0" ] ; then
      # local d=`date +%s`
      # d=`expr $d - $COMMAND_TIME`
      # if [ "$d" -ge "30" ] ; then
         # COMMAND="$COMMAND "
         # growlnotify -t "${${(s: :)COMMAND}[1]}" -m "$COMMAND" 2> /dev/null
      # fi
    # fi
    # COMMAND="0"
    # COMMAND_TIME="0"

    # # prompt vcs_info
    # psvar=()
    # LANG=en_US.UTF-8 vcs_info
    # psvar[1]=$vcs_info_msg_0_
  # }

  # preexec () {
    # COMMAND="${1}"
    # COMMAND_TIME=`date +%s`
  # }
# fi

# history
zshaddhistory() {
    local line=${1%%$'\n'}
    local cmd=${line%% *}

    # Adding executed command into history along the following rules.
    # Enumerate below, these are not wanted to add.
    #
    # * Less than 4 characters
    # * A pert of command is l, ls, la, ll
    # * A pert of command is c, cd
    # * A pert of command m, man

    [[ ${#line} -ge 5
        && ${cmd} != (l|l[sal])
        && ${cmd} != (c|cd)
        && ${cmd} != (sl)
# && ${cmd} != (gd)
        && ${cmd} != (m|man)
    ]]
}


# vcs_info
autoload -Uz add-zsh-hook
autoload -Uz vcs_info

zstyle ':vcs_info:*' enable git svn hg bzr
zstyle ':vcs_info:*' formats '%s-[%b] ~/%S'
zstyle ':vcs_info:*' actionformats '%s-[%b|%a]'
zstyle ':vcs_info:(svn|bzr):*' branchformat '%b:r%r'
zstyle ':vcs_info:bzr:*' use-simple true

function _update_vcs_info_msg() {
    psvar=()
    LANG=en_US.UTF-8 vcs_info
    [[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
}
add-zsh-hook precmd _update_vcs_info_msg 2> /dev/null


# http://www.quark.kj.yamagata-u.ac.jp/~hiroki/zsh/zsh.cgi
# environment variable set into tmux
function chpwd(){
    [ $TMUX ] && tmux -2 setenv TMUXPWD_$(tmux -2 display -p "#I") $PWD
}

# sette
#function chpwd(){
# _reg_pwd_screennum
#}


# precmd
# function _set_python_home_pythonbrew() {
    # [[ -s $HOME/.pythonbrew/etc/bashrc ]] && export PYTHON_HOME=`cat ~/.pythonbrew/etc/current | sed -e 's@PATH_PYTHONBREW_CURRENT="@@g' | sed -e 's@/bin"@@g'`
# }
# precmd_functions=($precmd_functions _set_python_home_pythonbrew)

# function _preexec_1() {
    # [[ -s $HOME/.pythonbrew/etc/bashrc ]] && export PYTHON_HOME=`cat ~/.pythonbrew/etc/current | sed -e 's@PATH_PYTHONBREW_CURRENT="@@g' | sed -e 's@/bin"@@g'`
# }
# preexec_functions=($preexec_functions _OREORE_preexec_1)
# preexec_functions=($preexec_functions _OREORE_preexec_2)


